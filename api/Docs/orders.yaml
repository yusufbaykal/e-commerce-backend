tags:
  - name: Orders
    description: Order management operations

paths:
  /api/orders/add:
    post:
      tags:
        - Orders
      summary: Create a new order
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - status
                - shipping_address
                - items
              properties:
                user_id:
                  type: string
                status:
                  type: string
                  enum: [pending, processing, shipped, delivered, cancelled]
                shipping_address:
                  type: object
                  required:
                    - street
                    - city
                    - state
                    - zip
                    - country
                  properties:
                    street:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    zip:
                      type: string
                    country:
                      type: string
                items:
                  type: array
                  items:
                    type: object
                    required:
                      - product_id
                      - quantity
                    properties:
                      product_id:
                        type: string
                      quantity:
                        type: integer
                        minimum: 1
                      price:
                        type: number
      responses:
        '200':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Created Order Successfully
                  data:
                    $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Products not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/orders/delete/{orderId}:
    delete:
      tags:
        - Orders
      summary: Archive an order
      security:
        - Bearer: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          description: ID of the order to archive
      responses:
        '200':
          description: Order archived successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Order archived successfully
                  data:
                    $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 